{"version":3,"file":"_server.ts-10e33aee.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/sensor/_server.ts.js"],"sourcesContent":["import \"../../../../chunks/index.js\";\nimport { d as db } from \"../../../../chunks/db.server.js\";\nimport { EventEmitter, once } from \"events\";\nfunction createEmitter(controller) {\n  let id = 1;\n  const encoder = new TextEncoder();\n  return function emit(eventName, data) {\n    const typeOfEventName = typeof eventName;\n    const typeOfData = typeof data;\n    if (typeOfEventName !== \"string\") {\n      throw new Error(\n        `Event name must of type \\`string\\`, received \\`${typeOfEventName}\\`.`\n      );\n    }\n    if (typeOfData !== \"string\") {\n      throw new Error(\n        `Event data must of type \\`string\\`, received \\`${typeOfData}\\`.`\n      );\n    }\n    if (eventName.includes(\"\\n\")) {\n      throw new Error(\n        `Event name must not contain new line characters, received \"${eventName}\".`\n      );\n    }\n    controller.enqueue(encoder.encode(`id: ${id}\nevent: ${eventName}\n`));\n    const chunks = data.split(\"\\n\");\n    for (const chunk of chunks) {\n      controller.enqueue(encoder.encode(`data: ${encodeURIComponent(chunk)}\n`));\n    }\n    controller.enqueue(encoder.encode(\"\\n\"));\n    id++;\n  };\n}\nfunction createStream(producer, onCancel) {\n  return new ReadableStream({\n    async start(controller) {\n      const customEmitter = createEmitter(controller);\n      await producer(customEmitter);\n      controller.close();\n    },\n    async cancel() {\n      const self = this;\n      for (const callback of onCancel) {\n        await callback(self);\n      }\n    }\n  });\n}\nfunction events(producer) {\n  const onCancel = [];\n  const headers = /* @__PURE__ */ new Map();\n  let stream = void 0;\n  return {\n    /**\n     * Set a response header.\n     *\n     * ### Note\n     * The following headers are set by default for all events:\n     * ```json\n     * {\n     *   \"Cache-Control\": \"no-store\",\n     *   \"Content-Type\": \"text/event-stream\",\n     *   \"Connection\": \"keep-alive\",\n     * }\n     * ```\n     *\n     * ### Warning\n     * Overwriting the default headers is allowed.\n     *\n     * Overwriting header `Content-Type` to something other than `text/event-stream` will break the SSE contract and the event will stop working as intended.\n     * @param {string} key\n     * @param {string} value\n     * @returns {ReturnType<events>}\n     */\n    setHeader(key, value) {\n      headers.set(key, value);\n      return this;\n    },\n    /**\n     * Do something after the stream has been canceled.\n     * @param {OnCancelCallback} callback\n     * @returns {ReturnType<events>}\n     */\n    onCancel(callback) {\n      onCancel.push(callback);\n      return this;\n    },\n    /**\n     * Get the underlying stream used by the event.\n     * @returns {ReadableStream<string>}\n     */\n    getStream() {\n      if (!stream) {\n        stream = createStream(producer, onCancel);\n      }\n      return stream;\n    },\n    /**\n     * Build a `Response`.\n     * @returns {Response}\n     */\n    toResponse() {\n      return new Response(this.getStream(), {\n        //@ts-ignore\n        headers: {\n          \"Cache-Control\": \"no-store\",\n          \"Content-Type\": \"text/event-stream\",\n          \"Connection\": \"keep-alive\",\n          ...headers\n        }\n      });\n    }\n  };\n}\nfunction event(producer) {\n  return events(function run(emit) {\n    return producer(function run2(data) {\n      return emit(\"message\", data);\n    });\n  });\n}\nconst eventEmitter = new EventEmitter();\nfunction GET() {\n  return event(async function run(emit) {\n    while (true) {\n      await once(eventEmitter, \"postReceived\");\n      emit(`${Date.now()}`);\n    }\n  }).toResponse();\n}\nasync function POST(evt) {\n  const data = await evt.request.json();\n  data.phase1.phase = 1;\n  data.phase2.phase = 2;\n  data.phase3.phase = 3;\n  await db.sample.create({\n    data: {\n      PhaseData: {\n        create: [data.phase1, data.phase2, data.phase3]\n      }\n    }\n  });\n  const digital_outputs = await db.digitalOutput.findMany();\n  eventEmitter.emit(\"postReceived\");\n  return new Response(\n    JSON.stringify({\n      success: true,\n      digital_outputs\n    }),\n    {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n  );\n}\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}